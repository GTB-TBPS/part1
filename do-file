*ensure data are clean and labelled in accordance with the data dictionary.
*undertake part 1 before part 2 and part 3.

    
**************** DO FILE FOR THE ANALYSIS OF A TB PREVALENCE SURVEY **************
**************  PART I. OUTCOME GENERATION, CLUSTER-LEVEL ANALYSES  **************
*** AND INDIVIDUAL LEVEL ANALYSES NOT REQUIRING MULTIPLE IMPUTATION (MODEL 1) ****
**********************************************************************************

clear all
set more off, permanently
*update your own directory
*cd "C:\Users\..........." 

use enumerated.dta, clear 
keep if elig_part==1

drop if agegroup==.
drop if sex==.

count
save eligible.dta, replace

use eligible.dta, clear
keep if part==1

count
save participants.dta, replace

use participants.dta, clear


*******************************************************************************
*******************************************************************************
***************  STEP I. CREATING OUTCOMES OF ANALYSIS  ***********************
*******************************************************************************
*******************************************************************************

*this will vary on the country and how you want to define a case

* create outcomes for culture and for Xpert Ultra
* every person who submitted specimens should have one culture result and one Xpert Ultra result

tab cxr2
tab cxr2,m

* but please note that not everyone had a central CXR reading. It was limited to abnormals and 10% of normal.

gen central_cxr_res=.
replace central_cxr_res =1 if cxr2==1
replace central_cxr_res =0 if cxr2==0

gen central_cxr_res_yn=0 if elig_sputum==1 | elig_sputum==4
replace central_cxr_res_yn=0 if (elig_sputum==2 | elig_sputum==3) & central_cxr_res==0
replace central_cxr_res_yn=1 if (elig_sputum==2 | elig_sputum==3) & central_cxr_res==1

* gen composite variable of how eligible to give sputum and central X-ray reading
gen elig_sputum_central=.
replace elig_sputum_central=0 if elig_sputum==1 /*symptoms only*/
replace elig_sputum_central=1 if elig_sputum==4 /*cxr exempt, asymp*/
replace elig_sputum_central=2 if elig_sputum==2 & central_cxr_res_yn==0 /*CXR only*/
replace elig_sputum_central=3 if elig_sputum==2 & central_cxr_res_yn==1 
replace elig_sputum_central=4 if elig_sputum==3 & central_cxr_res_yn==0 /*both cxr and symp elig*/
replace elig_sputum_central=5 if elig_sputum==3 & central_cxr_res_yn==1

* choose to group categories 2 and 4 (abnormal x-ray in field, with or without symptoms) as there is very little TB in these 2 categories
*tab elig_sputum_central case if elig_sputum<5, row 
*recode elig_sputum_central 4=2
*tab elig_sputum_central case if elig_sputum<5, row m

* look at associations with missing culture test result due to 
* no specimen collected / tube collected but empty/insufficient

****may be current TB treatment means more likelihood of having a missing culture result?

gen sput_both_result=.
replace sput_both_result=0 if sput1=="Yes" & sput2=="Yes" & culture>2
replace sput_both_result=1 if sput1=="Yes" & sput2=="Yes" & culture<3
tab sput_both_result

*sput_both_result = 0 means no test result for sample intended for culture
*and sput_both_result = 1 if 2 samples were collected and there is a test result for culture

tab sex sput_both_result, row
tab agegroup sput_both_result, row
tab strata sput_both_result, row
tab elig_sputum sput_both_result, row
tab cough sput_both_result, row
tab fever sput_both_result, row
tab sweat sput_both_result, row
tab body_weight sput_both_result, row
tab hivcombined sput_both_result if elig_sputum<5, row m
tab currenttb sput_both_result if elig_sputum<5, row m
tab pasttb sput_both_result if elig_sputum<5, row m
tab central_cxr_res_yn sput_both_result if elig_sputum<5, row m
tab elig_sputum_central sput_both_result if elig_sputum<5, row m


**************************************************
***************Xpert-detected cases***************
**************************************************

*Generate an Xpert result when at least one Xpert result is positive
*This was already done when gxp was created in clean.do (trace is classified as negative)

tab gxp,m
tab gxp if elig_sputum<5,m

label var gxp "Outcome of Xpert positive TB"
label define pos 0 "Negative" 1 "Positive"
label values gxp pos 

tab elig_sputum gxp,m 


*********************************
****** Culture-positive *********
*********************************


label var culture "Outcome of culture MTB"
label values culture pos 
tab culture,m

/*
tab elig_sputum gxp,row
tab elig_sputum culture,row
tab gxp culture if elig_sputum<5 & elig_part==1,m
tab gxp culture if elig_sputum==5,m
*/

* Breaking down the missingness

*how many are missing culture results and screen positive? (also which category are more missing)
*how many are missing Xpert results and screen positive? (also which category are more missing)
*how many are missing both results and screen positive? (also which category are more missing)

tab elig_sputum culture,m row
*what proportion of CXR exempted did not have a culture result?
*what proportion of those with symptoms only did not have a culture result?


tab elig_sputum gxp,m row
*what proportion of CXR exempted did not have a Xpert result?
*what proportion of those with symptoms only did not have a Xpert result?

gen bothresults=culture+gxp
tab both,m
*two results positive = XX
*either result positive = XX
* both results positive = XXXX

tab elig_sputum bothresults,m row
*XX% of symp only have no culture and no Xpert results
*XX% of CXR exemps have no culture and no Xpert results

gen  missing =1 if bothresults==. & elig_sputum<5
replace missing = 0 if bothresults!=. & elig_sputum<5
tab missing
tab missing,m
*XXXX people with missing Xpert or culture results


*generate outcome for new case definition: 1)any culture positive, plus 2) Xpert-positive with no history of TB (current nor past) plus 3) and CXR panel positive

tab case,m

* define the number who are not a case i.e. tested and participated (N=XX,XXX)
* who is not a case? Those who were eligible to submit but did not submit either specimen and not a case

bysort case: tab elig_sputum sput_coll,m

recode case 0=. if case==0 & sput_coll==. & elig_sputum<5

tab case,m

*some counts
tab sex case, row
tab agegroup case, row
tab strata case, row
tab elig_sputum case, row
tab cough case, row
tab fever case, row
tab sweat case, row
tab body_weight case, row
tab hivcombined case if elig_sputum<5, row m
tab currenttb case if elig_sputum<5, row m
tab pasttb case if elig_sputum<5, row m
tab cxr2 case if elig_sputum<5, row m
tab cxr1 case if elig_sputum<5, row m
tab central_cxr_res_yn case if elig_sputum<5, row m
tab elig_sputum_central case if elig_sputum<5, row m

*some counts against missing
tab sex missing, row
tab agegroup missing, row
tab strata missing, row
tab elig_sputum missing, row
tab cough missing, row
tab fever missing, row
tab sweat missing, row
tab body_weight missing, row
tab hivcombined missing if elig_sputum<5, row m
tab currenttb missing if elig_sputum<5, row m
tab pasttb missing if elig_sputum<5, row m
tab cxr2 missing if elig_sputum<5, row m
tab cxr1 missing if elig_sputum<5, row m
tab central_cxr_res_yn missing if elig_sputum<5, row m
tab elig_sputum_central missing if elig_sputum<5, row m



****************************************************************************

******VERY IMPORTANT STEP**************
*Turn negative all those who have been screened out */
recode gxp .=0 if elig_sputum==5
  
*Turn negative all those who have been screened out */
recode culture .=0 if elig_sputum==5

tab gxp culture, m 


***********************************
*IN THIS EXAMPLE:
*logistic case i.agegroup i.sex i.strata i.hx_final i.hiv_status_combine and list other symptoms/risk factors   THIS ONE IS PREFERRED IF DOING A RISK FACTOR ANALYSIS
*logistic case i.agegroup i.sex i.strata i.elig_sputum_central i.hx_final i.hivcombined THIS ONE IS PREFERRED  FOR IMPUTATION

***********************************

gen total_symptom=cough+fever+sweat+body_weight
tab total_symptom if elig_sputum<5, m
tab total_symptom case if elig_sputum<5, row

**************************************************************************

/*
* Variables to consider in the imputation analysis include:
INSERT XXXXXX

*/


sort pin

gen bact=.
replace bact=case

tab culture gxp,m
tab bact,m

compress

save analysis.dta, replace



*******************************************************************************
*******************************************************************************
*******************  STEP II. CLUSTER-LEVEL ANALYSES  *************************
*******************************************************************************
*******************************************************************************

**************************************************************************
* Combined bact result positive; when either of culture or GXP is positive 
**************************************************************************


clear all
set more off, permanently
*update your own directory and logs
*cd "C:\Users\..........." 


*log using "C:\Users.....tb_bact_cluster_analysis.log", replace

use analysis, clear

*****************************************************
* CLUSTER-SPECIFIC ESTIMATES (PER 100000 POPULATION)*
*****************************************************

drop if bact==. 

gen n=1
tab bact
tab bact strata
collapse (sum) bact n, by(cluster strata) /*For the whole population*/
sort cluster

tab bact
list, noobs
duplicates report cluster 
summ n, det
gen cluster_bact=bact/n
gen cluster_bact_100000 = cluster_bact*100000
format %6.3g cluster_bact_100000
move cluster_bact_100000 n
drop cluster_bact

/* Produce a histogram of prevalence by cluster */

label variable cluster_bact_100000 "Prevalence of bacteriologically confirmed pulmonary TB per 100,000 population"
histogram cluster_bact_100000, start(0) width(100) frequency ///
ylabel(,angle(horizontal)) /// 
ylabel(, nogrid) xsize(6.83) ysize(5.0) graphregion(fcolor(white)) ///
plotregion(fcolor(white))

*******************************************
* OVERALL ESTIMATE (PER 100000 POPULATION)*
*******************************************

*First create the headings in the Excel file for export
*This first command sets out the name of the file to be used

putexcel set les_cluster.xlsx, sheet(sheet 1) replace

putexcel F1=("Category") G1=("Best estimate") H1=("Low") I1=("Hi"), bold
putexcel K1=("Best estimate") L1=("Low") M1=("Hi"), bold
putexcel O1=("Best estimate") P1=("Low") Q1=("Hi"), bold
putexcel F2=("Cluster") K2=("Model 1") O2=("Model X"), bold

putexcel F3=("All") F5=("Male") F6=("Female"), bold 
putexcel F8=("15-24 yrs") F9=("25-34 yrs") F10=("35-44 yrs") F11=("45-54 yrs") F12=("55-64 yrs") F13=("65+ yrs"), bold 
putexcel F15=("Urban") F16=("Rural") F17=("Peri-urban"), bold
putexcel F20=("DEFF"), bold 



summ cluster_bact_100000 

* Poisson regression 
poisson bact, irr exposure(n)
nlcom (Total: exp(_b[_cons])*100000) 

putexcel G3=matrix (r(b))

preserve
matrix a = r(b)
matrix b = r(V)
svmat double a, name(coef)
svmat double b, name(se)
gen ll = coef1 - (1.96*sqrt(se1)) 
gen ul = coef1 + (1.96*sqrt(se1)) 
drop if ll==. | ul==.
mkmat ll, matrix(ll)
mkmat ul, matrix(ul)
putexcel H3=matrix (ll) I3=matrix (ul) 	  
restore 	 


****************************
* TB PREVALENCE BY SETTING *
****************************
bysort strata: summ cluster_bact_100000

* Poisson Regression
xi: poisson bact i.strata, irr exposure(n)
nlcom (strata1: exp(_b[_cons])*100000) /*urban*/
nlcom (strata2: exp(_b[_cons]+_b[_Istrata_2])*100000) /*rural*/ 
nlcom (strata3: exp(_b[_cons]+_b[_Istrata_3])*100000) /*peri-urban*/  


nlcom (strata1: exp(_b[_cons])*100000) /*urban*/
putexcel G15=matrix (r(b)) 

preserve
matrix a = r(b)
matrix b = r(V)
svmat double a, name(coef)
svmat double b, name(se)
gen ll = coef1 - (1.96*sqrt(se1)) 
gen ul = coef1 + (1.96*sqrt(se1)) 
drop if ll==. | ul==.
mkmat ll, matrix(ll)
mkmat ul, matrix(ul)
putexcel H15=matrix (ll) I15=matrix (ul) 	  
restore 	 

nlcom (strata2: exp(_b[_cons]+_b[_Istrata_2])*100000)  /*rural*/
putexcel G16=matrix (r(b)) 

preserve
matrix a = r(b)
matrix b = r(V)
svmat double a, name(coef)
svmat double b, name(se)
gen ll = coef1 - (1.96*sqrt(se1)) 
gen ul = coef1 + (1.96*sqrt(se1)) 
drop if ll==. | ul==.
mkmat ll, matrix(ll)
mkmat ul, matrix(ul)
putexcel H16=matrix (ll) I16=matrix (ul) 	  
restore 	

nlcom (strata3: exp(_b[_cons]+_b[_Istrata_3])*100000)   /*peri urban*/
putexcel G17=matrix (r(b)) 

preserve
matrix a = r(b)
matrix b = r(V)
svmat double a, name(coef)
svmat double b, name(se)
gen ll = coef1 - (1.96*sqrt(se1)) 
gen ul = coef1 + (1.96*sqrt(se1)) 
drop if ll==. | ul==.
mkmat ll, matrix(ll)
mkmat ul, matrix(ul)
putexcel H17=matrix (ll) I17=matrix (ul) 	  
restore 

	 
*/
	  
************************
* TB PREVALENCE BY SEX *
************************

use analysis.dta, clear

drop if bact==. 

gen n=1
tab bact sex, col

collapse (sum) bact n, by(cluster sex) 
sort cluster

tab bact
bysort sex: summ n, det
/* generate proportion of participants who are bacteriologically-confirmed */
gen cluster_bact=bact/n 
/* generate bacteriologically-confirmed participant rate per 100,000 */
gen cluster_bact_100000 = cluster_bact*100000 
format %6.3g cluster_bact_100000 
move n bact
drop cluster_bact 

bysort sex :summ cluster_bact_100000 

xi: poisson bact i.sex, irr exposure(n)
nlcom (Male: exp(_b[_cons]+_b[_Isex_1])*100000)
nlcom (Female: exp(_b[_cons])*100000)


putexcel G6=matrix (r(b)) 

preserve
matrix a = r(b)
matrix b = r(V)
svmat double a, name(coef)
svmat double b, name(se)
gen ll = coef1 - (1.96*sqrt(se1)) 
gen ul = coef1 + (1.96*sqrt(se1)) 
drop if ll==. | ul==.
mkmat ll, matrix(ll)
mkmat ul, matrix(ul)
putexcel H6=matrix (ll) I6=matrix (ul)	  
restore 	 

nlcom (Male: exp(_b[_cons]+_b[_Isex_1])*100000)
putexcel G5=matrix (r(b)) 

matrix a = r(b)
matrix b = r(V)
svmat double a, name(coef)
svmat double b, name(se)
gen ll = coef1 - (1.96*sqrt(se1)) 
gen ul = coef1 + (1.96*sqrt(se1)) 
drop if ll==. | ul==.
mkmat ll, matrix(ll)
mkmat ul, matrix(ul)
putexcel H5=matrix (ll) I5=matrix (ul) 



*****************************
* TB PREVALENCE BY AGEGROUP *
*****************************

set more off, permanently

use analysis.dta, clear

drop if bact==. 
gen n=1
tab bact agegroup,col

collapse (sum) bact n, by(cluster agegroup) 
sort cluster
tab bact
bysort agegroup: summ n, det 
/* generate proportion of participants who are bacteriologically-confirmed*/
gen cluster_bact=bact/n 
/* generate bacteriologically-confirmed rate per 100,000 */
gen cluster_bact_100000 = cluster_bact*100000 
format %6.3g cluster_bact_100000 
move n bact
drop cluster_bact 

bysort agegroup:summ cluster_bact_100000 
* Poisson Regression
xi: poisson bact i.agegroup, irr exposure(n)
nlcom (Age15: exp(_b[_cons])*100000)
nlcom (Age25: exp(_b[_cons]+_b[_Iagegroup_5])*100000) 
nlcom (Age35: exp(_b[_cons]+_b[_Iagegroup_6])*100000) 
nlcom (Age45: exp(_b[_cons]+_b[_Iagegroup_7])*100000) 
nlcom (Age55: exp(_b[_cons]+_b[_Iagegroup_8])*100000) 
nlcom (Age65: exp(_b[_cons]+_b[_Iagegroup_9])*100000) 

nlcom (Age15: exp(_b[_cons])*100000)
putexcel G8=matrix (r(b)) 

preserve
matrix a = r(b)
matrix b = r(V)
svmat double a, name(coef)
svmat double b, name(se)
gen ll = coef1 - (1.96*sqrt(se1)) 
gen ul = coef1 + (1.96*sqrt(se1)) 
drop if ll==. | ul==.
mkmat ll, matrix(ll)
mkmat ul, matrix(ul)
putexcel H8=matrix (ll) I8=matrix (ul) 
restore

nlcom (Age25: exp(_b[_cons]+_b[_Iagegroup_5])*100000) 
putexcel G9=matrix (r(b)) 

preserve
matrix a = r(b)
matrix b = r(V)
svmat double a, name(coef)
svmat double b, name(se)
gen ll = coef1 - (1.96*sqrt(se1)) 
gen ul = coef1 + (1.96*sqrt(se1)) 
drop if ll==. | ul==.
mkmat ll, matrix(ll)
mkmat ul, matrix(ul)
putexcel H9=matrix (ll) I9=matrix (ul)  
restore

nlcom (Age35: exp(_b[_cons]+_b[_Iagegroup_6])*100000) 
putexcel G10=matrix (r(b)) 

preserve
matrix a = r(b)
matrix b = r(V)
svmat double a, name(coef)
svmat double b, name(se)
gen ll = coef1 - (1.96*sqrt(se1)) 
gen ul = coef1 + (1.96*sqrt(se1)) 
drop if ll==. | ul==.
mkmat ll, matrix(ll)
mkmat ul, matrix(ul)
putexcel H10=matrix (ll) I10=matrix (ul)  
restore

nlcom (Age45: exp(_b[_cons]+_b[_Iagegroup_7])*100000) 
putexcel G11=matrix (r(b)) 

preserve
matrix a = r(b)
matrix b = r(V)
svmat double a, name(coef)
svmat double b, name(se)
gen ll = coef1 - (1.96*sqrt(se1)) 
gen ul = coef1 + (1.96*sqrt(se1)) 
drop if ll==. | ul==.
mkmat ll, matrix(ll)
mkmat ul, matrix(ul)
putexcel H11=matrix (ll) I11=matrix (ul)  
restore

nlcom (Age55: exp(_b[_cons]+_b[_Iagegroup_8])*100000) 
putexcel G12=matrix (r(b)) 

preserve
matrix a = r(b)
matrix b = r(V)
svmat double a, name(coef)
svmat double b, name(se)
gen ll = coef1 - (1.96*sqrt(se1)) 
gen ul = coef1 + (1.96*sqrt(se1)) 
drop if ll==. | ul==.
mkmat ll, matrix(ll)
mkmat ul, matrix(ul)
putexcel H12=matrix (ll) I12=matrix (ul)  
restore

nlcom (Age65: exp(_b[_cons]+_b[_Iagegroup_9])*100000)
putexcel G13=matrix (r(b)) 

matrix a = r(b)
matrix b = r(V)
svmat double a, name(coef)
svmat double b, name(se)
gen ll = coef1 - (1.96*sqrt(se1)) 
gen ul = coef1 + (1.96*sqrt(se1)) 
drop if ll==. | ul==.
mkmat ll, matrix(ll)
mkmat ul, matrix(ul)
putexcel H13=matrix (ll) I13=matrix (ul)  
	  

	  

**************************************
* TB PREVALENCE BY AGEGROUP AND SEX *
**************************************

*FOR MEN

use analysis, clear

drop if bact==. 
drop if sex==0
gen n=1
tab bact agegroup,col

collapse (sum) bact n, by(cluster agegroup) 
sort cluster
tab bact
bysort agegroup: summ n, det 
/* generate proportion of participants who are bacteriologically-confirmed*/
gen cluster_bact=bact/n 
/* generate bacteriologically-confirmed rate per 100,000 */
gen cluster_bact_100000 = cluster_bact*100000 
format %6.3g cluster_bact_100000 
move n bact
drop cluster_bact 

bysort agegroup:summ cluster_bact_100000 
* Poisson Regression
xi: poisson bact i.agegroup, irr exposure(n)
nlcom (Age15: exp(_b[_cons])*100000)
nlcom (Age25: exp(_b[_cons]+_b[_Iagegroup_5])*100000) 
nlcom (Age35: exp(_b[_cons]+_b[_Iagegroup_6])*100000) 
nlcom (Age45: exp(_b[_cons]+_b[_Iagegroup_7])*100000) 
nlcom (Age55: exp(_b[_cons]+_b[_Iagegroup_8])*100000) 
nlcom (Age65: exp(_b[_cons]+_b[_Iagegroup_9])*100000) 		 
		 
		 
*FOR WOMEN

use analysis.dta, clear

drop if bact==. 
drop if sex==1 
gen n=1
tab bact agegroup,col

collapse (sum) bact n, by(cluster agegroup) 
sort cluster
tab bact
bysort agegroup: summ n, det 
/* generate proportion of participants who are bacteriologically-confirmed*/
gen cluster_bact=bact/n 
/* generate bacteriologically-confirmed rate per 100,000 */
gen cluster_bact_100000 = cluster_bact*100000 
format %6.3g cluster_bact_100000 
move n bact
drop cluster_bact 

bysort agegroup:summ cluster_bact_100000 
* Poisson Regression
xi: poisson bact i.agegroup, irr exposure(n)
nlcom (Age15: exp(_b[_cons])*100000)
nlcom (Age25: exp(_b[_cons]+_b[_Iagegroup_5])*100000) 
nlcom (Age35: exp(_b[_cons]+_b[_Iagegroup_6])*100000) 
nlcom (Age45: exp(_b[_cons]+_b[_Iagegroup_7])*100000) 
nlcom (Age55: exp(_b[_cons]+_b[_Iagegroup_8])*100000) 
nlcom (Age65: exp(_b[_cons]+_b[_Iagegroup_9])*100000) 		 





*****************************
* TB PREVALENCE BY HIV combined *
*****************************		 
	

use analysis.dta, clear

drop if bact==. 
rename hivcombined hiv

gen n=1
tab bact hiv, col

collapse (sum) bact n, by(cluster hiv) 
sort cluster

tab bact
bysort hiv: summ n, det
/* generate proportion of participants who are bacteriologically-confirmed */
gen cluster_bact=bact/n 
/* generate bacteriologically-confirmed participant rate per 100,000 */
gen cluster_bact_100000 = cluster_bact*100000 
format %6.3g cluster_bact_100000 
move n bact
drop cluster_bact 

bysort hiv :summ cluster_bact_100000 

xi: poisson bact i.hiv, irr exposure(n)
nlcom (HIVpositive: exp(_b[_cons]+_b[_Ihiv_1])*100000)
nlcom (HIVnegative: exp(_b[_cons])*100000)

  
		 
*logit bact agegroup##sex, robust cluster(cluster)
*margins agegroup#sex	  	  
	  	  
 	  	  
*******************************************************************************
*******************************************************************************
*******************************************************************************
************  STEP III. INDIVIDUAL-LEVEL ANALYSES - MODEL 1  ******************
*******************************************************************************
*******************************************************************************
*******************************************************************************

* Crude binomial exact estimation, ignoring clustering 
* This is a known biased estimate of the uncertainty, but important to conduct and record results for completeness

* Bacteriologically-confirmed, also use cii command for binomial exact calculation of lower and upper limits of each estimate
*  cii #obs #succ 

*bact cases
*tab bact sex, col
*tab bact agegroup, col
*tab bact strata, col


******************************************************************************
***********  MODEL 1 - ROBUST STANDARD ERRORS WITHOUT MI  ********************
******************************************************************************

***********************************************
*** BACTERIOLOGICALLY-CONFIRMED OUTCOME (n=XXX) 
***********************************************


use analysis, clear


* OVERALL PREVALENCE
xi:logit bact, robust cluster(cluster)
nlcom 100000*exp(_b[_cons])/(1+exp(_b[_cons])) 

matrix data = r(table)
matrix list data

putexcel K3=matrix (r(b)) 

preserve
matrix a = r(b)
matrix b = r(V)
svmat double a, name(coef)
svmat double b, name(se)
gen ll = coef1 - (1.96*sqrt(se1)) 
gen ul = coef1 + (1.96*sqrt(se1)) 
drop if ll==. | ul==.
mkmat ll, matrix(ll)
mkmat ul, matrix(ul)
putexcel L3=matrix (ll) M3=matrix (ul)
restore


* CALCULATING THE DESIGN EFFECT *
svyset cluster
svy: logit bact
/* DEFF = X.XX*/
estat effects 

putexcel K20=matrix (r(deff))


* SEX-SPECIFIC PREVALENCE RATE

logit bact i.sex, robust cluster(cluster)


/*Male */
nlcom 100000*exp(_b[_cons]+_b[1.sex])/(1+exp(_b[_cons]+_b[1.sex])) 

putexcel K5=matrix (r(b)) 

preserve
matrix a = r(b)
matrix b = r(V)
svmat double a, name(coef)
svmat double b, name(se)
gen ll = coef1 - (1.96*sqrt(se1)) 
gen ul = coef1 + (1.96*sqrt(se1)) 
drop if ll==. | ul==.
mkmat ll, matrix(ll)
mkmat ul, matrix(ul)
putexcel L5=matrix (ll) M5=matrix (ul)  
restore
*/

/*Female */
nlcom 100000*exp(_b[_cons])/(1+exp(_b[_cons]))

putexcel K6=matrix (r(b))

preserve
matrix a = r(b)
matrix b = r(V)
svmat double a, name(coef)
svmat double b, name(se)
gen ll = coef1 - (1.96*sqrt(se1)) 
gen ul = coef1 + (1.96*sqrt(se1)) 
drop if ll==. | ul==.
mkmat ll, matrix(ll)
mkmat ul, matrix(ul)
putexcel L6=matrix (ll) M6=matrix (ul) 
restore


* STRATUM-SPECIFIC PREVALENCE RATE 
tab strata
xi: logit bact i.strata, robust cluster(cluster)

nlcom 100000*exp(_b[_cons])/(1+exp(_b[_cons])) 


putexcel K15=matrix (r(b)) 

preserve
matrix a = r(b)
matrix b = r(V)
svmat double a, name(coef)
svmat double b, name(se)
gen ll = coef1 - (1.96*sqrt(se1)) 
gen ul = coef1 + (1.96*sqrt(se1)) 
drop if ll==. | ul==.
mkmat ll, matrix(ll)
mkmat ul, matrix(ul)
putexcel L15=matrix (ll) M15=matrix (ul)  
restore
*/

nlcom 100000*exp(_b[_cons]+_b[_Istrata_2])/(1+exp(_b[_cons]+_b[_Istrata_2])) 


putexcel  K16=matrix (r(b)) 

preserve
matrix a = r(b)
matrix b = r(V)
svmat double a, name(coef)
svmat double b, name(se)
gen ll = coef1 - (1.96*sqrt(se1)) 
gen ul = coef1 + (1.96*sqrt(se1)) 
drop if ll==. | ul==.
mkmat ll, matrix(ll)
mkmat ul, matrix(ul)
putexcel L16=matrix (ll) M16=matrix (ul)  
restore


nlcom 100000*exp(_b[_cons]+_b[_Istrata_3])/(1+exp(_b[_cons]+_b[_Istrata_3])) 


putexcel  K17=matrix (r(b)) 

preserve
matrix a = r(b)
matrix b = r(V)
svmat double a, name(coef)
svmat double b, name(se)
gen ll = coef1 - (1.96*sqrt(se1)) 
gen ul = coef1 + (1.96*sqrt(se1)) 
drop if ll==. | ul==.
mkmat ll, matrix(ll)
mkmat ul, matrix(ul)
putexcel L17=matrix (ll) M17=matrix (ul)  
restore



* AGE-SPECIFIC PREVALENCE RATE

logit bact i.agegroup, robust cluster(cluster)
nlcom 100000*exp(_b[_cons])/(1+exp(_b[_cons]))/*Age 15-24 */


putexcel K8=matrix (r(b)) 

preserve
matrix a = r(b)
matrix b = r(V)
svmat double a, name(coef)
svmat double b, name(se)
gen ll = coef1 - (1.96*sqrt(se1)) 
gen ul = coef1 + (1.96*sqrt(se1)) 
drop if ll==. | ul==.
mkmat ll, matrix(ll)
mkmat ul, matrix(ul)
putexcel L8=matrix (ll) M8=matrix (ul)  
restore


nlcom 100000*exp(_b[_cons]+_b[5.agegroup])/(1+exp(_b[_cons]+_b[5.agegroup]))/* Age 25-34 */

putexcel K9=matrix (r(b)) 

preserve
matrix a = r(b)
matrix b = r(V)
svmat double a, name(coef)
svmat double b, name(se)
gen ll = coef1 - (1.96*sqrt(se1)) 
gen ul = coef1 + (1.96*sqrt(se1)) 
drop if ll==. | ul==.
mkmat ll, matrix(ll)
mkmat ul, matrix(ul)
putexcel L9=matrix (ll) M9=matrix (ul)  
restore

nlcom 100000*exp(_b[_cons]+_b[6.agegroup])/(1+exp(_b[_cons]+_b[6.agegroup]))/* Age 35-44 */
putexcel K10=matrix (r(b)) 

preserve
matrix a = r(b)
matrix b = r(V)
svmat double a, name(coef)
svmat double b, name(se)
gen ll = coef1 - (1.96*sqrt(se1)) 
gen ul = coef1 + (1.96*sqrt(se1)) 
drop if ll==. | ul==.
mkmat ll, matrix(ll)
mkmat ul, matrix(ul)
putexcel L10=matrix (ll) M10=matrix (ul)  
restore

nlcom 100000*exp(_b[_cons]+_b[7.agegroup])/(1+exp(_b[_cons]+_b[7.agegroup]))/* Age 45-54 */

putexcel K11=matrix (r(b)) 

preserve
matrix a = r(b)
matrix b = r(V)
svmat double a, name(coef)
svmat double b, name(se)
gen ll = coef1 - (1.96*sqrt(se1)) 
gen ul = coef1 + (1.96*sqrt(se1)) 
drop if ll==. | ul==.
mkmat ll, matrix(ll)
mkmat ul, matrix(ul)
putexcel L11=matrix (ll) M11=matrix (ul)  
restore

nlcom 100000*exp(_b[_cons]+_b[8.agegroup])/(1+exp(_b[_cons]+_b[8.agegroup]))/* Age 55-64 */

putexcel K12=matrix (r(b)) 

preserve
matrix a = r(b)
matrix b = r(V)
svmat double a, name(coef)
svmat double b, name(se)
gen ll = coef1 - (1.96*sqrt(se1)) 
gen ul = coef1 + (1.96*sqrt(se1)) 
drop if ll==. | ul==.
mkmat ll, matrix(ll)
mkmat ul, matrix(ul)
putexcel L12=matrix (ll) M12=matrix (ul)  
restore

nlcom 100000*exp(_b[_cons]+_b[9.agegroup])/(1+exp(_b[_cons]+_b[9.agegroup]))/* Age 65+ */

putexcel K13=matrix (r(b))

preserve
matrix a = r(b)
matrix b = r(V)
svmat double a, name(coef)
svmat double b, name(se)
gen ll = coef1 - (1.96*sqrt(se1)) 
gen ul = coef1 + (1.96*sqrt(se1)) 
drop if ll==. | ul==.
mkmat ll, matrix(ll)
mkmat ul, matrix(ul)
putexcel L13=matrix (ll) M13=matrix (ul)  
restore

putexcel (F3:Q17), nformat(number)
 
 
* HIV-SPECIFIC PREVALENCE RATE
rename hivcombined hiv
logit bact i.hiv, robust cluster(cluster)


*HIV positiive
nlcom 100000*exp(_b[_cons]+_b[1.hiv])/(1+exp(_b[_cons]+_b[1.hiv])) 


*HIV negative
nlcom 100000*exp(_b[_cons])/(1+exp(_b[_cons]))


**********************************************
**********************************************
**********************************************


/*

* AGE AND SEX SPECIFIC PREVALENCE RATE

*gen estimate capture
 forval i = 1/12 {
 cap gen a`i'=.
 }

logit bact agegroup##sex, robust cluster(cluster)
margins agegroup#sex

* NOTE: Obtain prevalence estimates by multiplying the estimates produced by the margins command by 100000

/***************************
Output margins into Excel 
****************************/
matrix data = r(table)
matrix list data

*gen tables
replace a1 = data[1,1] *100000
replace a2 = data[1,3] *100000
replace a3 = data[1,5] *100000
replace a4 = data[1,7] *100000
replace a5 = data[1,9] *100000
replace a6 = data[1,11] *100000

replace a7 = data[1,2] *100000
replace a8 = data[1,4] *100000
replace a9 = data[1,6] *100000
replace a10 = data[1,8] *100000
replace a11 = data[1,10] *100000
replace a12 = data[1,12] *100000


*gen 95% lo
 forval i = 1/12 {
 cap gen b`i'=.
 }

replace b1 = data[5,1] *100000
replace b2 = data[5,3] *100000
replace b3 = data[5,5] *100000
replace b4 = data[5,7] *100000
replace b5 = data[5,9] *100000
replace b6 = data[5,11] *100000

replace b7 = data[5,2] *100000
replace b8 = data[5,4] *100000
replace b9 = data[5,6] *100000
replace b10 = data[5,8] *100000
replace b11 = data[5,10] *100000
replace b12 = data[5,12] *100000


*gen 95% hi
 forval i = 1/12 {
 cap gen c`i'=.
 }

replace c1 = data[6,1] *100000
replace c2 = data[6,3] *100000
replace c3 = data[6,5] *100000
replace c4 = data[6,7] *100000
replace c5 = data[6,9] *100000
replace c6 = data[6,11] *100000

replace c7 = data[6,2] *100000
replace c8 = data[6,4] *100000
replace c9 = data[6,6] *100000
replace c10 = data[6,8] *100000
replace c11 = data[6,10] *100000
replace c12 = data[6,12] *100000

*putexcel A23=("f15-24")  A24=("f25-34")  A25=("f35-44")  A26=("f45-54") A27=("f55-64")  A28=("f65+")  ///
*A17=("m15-24")  A18=("m25-34")  A19=("m35-44")  A20=("m45-54")  A21=("m55-64")  A22=("m65+") 


local row1=1
forval i = 17/28 {
putexcel G`i'=(a`row1') H`i'=(b`row1') I`i'=(c`row1') 
 local row1 = `row1' + 1 
}

drop a1-a12 b1-b12 c1-c12


putexcel (B3:N28), nformat(number) 
putexcel (B30:M30), nformat(number_d2)

*****************************************************************************************
*****************************************************************************************

 */
 
